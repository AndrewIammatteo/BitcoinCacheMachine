
version: '3.7'
services:
  # REST commands come over 8083 to control the configuratino of kafka connect
  # Listens on TCP 514 (syslog)
  kafka-connect:
    image: ${IMAGE_FQDN}
    ports:
      - "8083:8083"
      - "514:5514"
    networks:
      zookeepernet:
      kafkanet:
      schemaregistrynet:
      kafkaconnectnet:
        aliases:
          - kafkaconnect
    environment:
      CONNECT_BOOTSTRAP_SERVERS: broker-01:9092
      CONNECT_ZOOKEEPER_CONNECT: zookeeper-01:2181
      CONNECT_REST_ADVERTISED_HOST_NAME: kafkaconnect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: kafka-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: kafka-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: kafka-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: kafka-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schemaregistry:8081
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schemaregistry:8081
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_INTERNAL_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_PLUGIN_PATH: /etc/kafka-connect/jars
    deploy:
      mode: global
      placement:
        constraints:
          - engine.labels.bcm-kafka == true

networks:
  kafkaconnectnet:
    attachable: true
  
  zookeepernet:
    external: true
  
  kafkanet:
    external: true

  schemaregistrynet:
    external: true
    name: kafkaschemareg_schemaregistrynet