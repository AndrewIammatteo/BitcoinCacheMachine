Description:
  Create an LXD cluster so you can deploy your BCM projects to it.

Usage:
  bcm cluster create 

Example:
  Create an LXD cluster named 'dev'. Since '-t=lxd', LXD will be installed automatically using
  snap. Since '-x=net', the LXD remote endpoint will be exposed on the local network when your 
  
      bcm cluster create -c=dev -t=local -x=net

Parameters:
  --cluster-name=         The name of the new cluster. $BCM_RUNTIME_DIR/clusters/<BCM_CLUSTER_NAME> will 
  <BCM_CLUSTER_NAME>      be populated after successful cluster creation.
                          --cluster-name=<BCM_CLUSTER_NAME>
    
  --provider=             The provider is the mechanism by which an LXD instance will be made
  <BCM_PROVIDER>          available. Valid option as are 'multipass', 'aws', and 'baremetal'. 
                          
                          'baremetal' installs LXD locally using snap and is recommended for 
                          testing and development. 
                          
                          'multipass' install multipass as a snap and creates one or more QEMU-based
                          VMs on your local computer. Each VM will be cloud-init provisioned into a 
                          cluster configuratino
                          
                          'aws/azure' NOT SUPPORTED. BCM is meant for home and small office.
  
  --node-count=          Cluster count. Number of equal-size multipass VMs you want deployed.
  <BCM_NODE_COUNT>  

  --mgmt-type             Valid values are 'local', and 'tor'. All LXD instances listen on the local network
  <BCM_MGMT_TYPE>         on TCP/8443 to communicate with adjacent cluster members.
                            
                          'local' is only compatible with '-t=baremetal' and configures your local LXD c
                          lient to use TLS connect on a localhost address (127.0.10.1). Great for testing.
                          
                          'tor' create a TOR onion service that exposes the LXD daemon TLS endpoint.
                          Your management plane can use authenticated TOR onion sites to manage geographically
                          remote cluster endpoints without having to open firewall ports.
 
